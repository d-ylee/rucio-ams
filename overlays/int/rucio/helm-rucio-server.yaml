---
# Source: rucio-server/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: fnal-rucio-server.config.common
  labels:
    app: rucio-server
    chart: "rucio-server"
    release: "fnal"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJwb2xpY3kiOiB7CiAgICAicGFja2FnZSI6ICJydWNpb2ludHBvbGljeSIKICB9LAogICJ3ZWJ1aSI6IHsKICAgICJ1cmxzIjogImh0dHBzOi8vd2VidWktaW50LXJ1Y2lvLmZuYWwuZ292IgogIH0KfQ=="
---
# Source: rucio-server/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: fnal-rucio-server.cfg
  labels:
    app: rucio-server
    chart: "rucio-server-38.0.0"
    release: "fnal"
    heritage: "Helm"
type: Opaque
data:
  grid_site_enabled: "VHJ1ZQ=="
---
# Source: rucio-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: fnal-rucio-server
  labels:
    app: rucio-server
    chart: rucio-server-38.0.0
    release: fnal
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 443
      protocol: TCP
      name: https
  selector:
    app: rucio-server
    release: fnal
---
# Source: rucio-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fnal-rucio-server
  labels:
    app: rucio-server
    chart: rucio-server-38.0.0
    release: fnal
    heritage: Helm

spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-server
      release: fnal
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-server
        release: fnal
      annotations:
        checksum/config: 0a712bc225b0512abca6d66d05e561f685d99d07
    spec:
      serviceAccountName: useroot
      volumes:
      - name: config
        secret:
          secretName: fnal-rucio-server.config.common
      - name: httpdlog
        emptyDir: {}
      - name: policy-package-volume
        emptyDir: {}
      - name: policy-package
        secret:
          secretName: fnal-policy-package
      - name: httpd-custom-config
        secret:
          secretName: fnal-httpd-custom-config
      - name: ca-volume
        secret:
          secretName: fnal-ca-volume
      - name: server-hostcert
        secret:
          secretName: fnal-server-hostcert
      - name: server-hostkey
        secret:
          secretName: fnal-server-hostkey
      initContainers:
      - name: install-policy-packages
        # A slim Python image could be used instead, but using the same image as the base image for the main container ensures that the same Python version is used
        image: "almalinux:9"
        command:
          - /bin/bash
          - -e
          - -c
          - |
            export PYTHONPATH=/opt/policy_packages/:$PYTHONPATH
            if python3 -c "from importlib.metadata import version; assert version('ruciointpolicy') == '0.1.0'"; then
                echo "module ruciointpolicy version 0.1.0 is already installed"
            else
                if [[ 'git+https://github.com/d-ylee/ruciointpolicy@main' == git+* ]]; then
                    dnf install --assumeyes git
                fi
                dnf install --assumeyes python-pip
                pip uninstall --yes ruciointpolicy
                pip install git+https://github.com/d-ylee/ruciointpolicy@main --target /opt/policy_packages/
            fi
        volumeMounts:
        - name: policy-package-volume
          mountPath: /opt/policy_packages/
      containers:
        - name: httpd-error-log
          image: "busybox"
          args: [/bin/sh, -c, 'tail -n+1 -F /var/log/httpd/error_log']
          volumeMounts:
          - name: httpdlog
            mountPath: /var/log/httpd
          resources:
            limits:
              cpu: 30m
              memory: 50Mi
            requests:
              cpu: 20m
              memory: 20Mi
        - name: rucio-server
          image: "imageregistry.fnal.gov/docker.io/rucio/rucio-server:release-38.1.0"
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 700m
              memory: 600Mi
            requests:
              cpu: 200m
              memory: 200Mi
          volumeMounts:
          - name: config
            mountPath: /opt/rucio/etc/conf.d/10_common.json
            subPath: common.json
          - name: policy-package-volume
            mountPath: /opt/policy_packages/
          - name: httpdlog
            mountPath: /var/log/httpd
          - name: policy-package
            mountPath: /opt/rucio/permissions/fermilab
            subPath: 
          - name: httpd-custom-config
            mountPath: /etc/httpd/conf.d/fnal-custom-config.conf
            subPath: fnal-custom-config.conf
          - name: ca-volume
            mountPath: /etc/grid-security/certificates
            subPath: 
          - name: server-hostcert
            mountPath: /etc/grid-security/hostcert.pem
            subPath: hostcert.pem
          - name: server-hostkey
            mountPath: /etc/grid-security/hostkey.pem
            subPath: hostkey.pem
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: health
              containerPort: 444
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ping
              port: 444
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /ping
              port: 444
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 5
          env:
            - name: RUCIO_HTTPD_GRID_SITE_ENABLED
              valueFrom:
                secretKeyRef:
                  name: fnal-rucio-server.cfg
                  key: grid_site_enabled
            - name: PYTHONPATH
              value: /opt/policy_packages/
            - name: RUCIO_ENABLE_SSL
              value: "True"
            - name: RUCIO_HEALTH_CHECK_PORT
              value: "444"
            - name: RUCIO_SERVER_TYPE
              value: "api"
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_LOG_FORMAT
              value: '[%{%Y-%m-%d %H:%M:%S}t]\t%v\t%h\t%{X-Forwarded-For}i\t%{X-Rucio-RequestId}i\t%>s\t%I\t%B\t%D\t\"%r\"\t\"%{X-Rucio-Account}i\"\t\"%{User-Agent}i\"\t%{X-Rucio-Script}i'
            - name: RUCIO_WSGI_DAEMON_PROCESSES
              value: "4"
            - name: RUCIO_WSGI_DAEMON_THREADS
              value: "4"
            - name: RUCIO_CFG_DATABASE_DEFAULT
              valueFrom:
                secretKeyRef:
                  key: db-connstr.txt
                  name: fnal-db-connstr
            - name: RUCIO_HTTPD_LEGACY_DN
              value: "True"
            - name: RUCIO_CA_PATH
              value: /etc/grid-security/certificates
      affinity:
